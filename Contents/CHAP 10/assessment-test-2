1. How to retrieve all information from the cd.facilities table
SELECT * FROM cd.facilities;

2. You want to print out a list of all the facilitie names and their cost to members
SELECT name, membercost FROM cd.facilities;

3. Produce a list of facilities that charge a fee to members
SELECT * FROM cd.facilities 
WHERE membercost != 0;

4. Produce a list of facilities that charge a fee to members, and the fee less than 1/50 of the monthly maintenance cost?
Return the facid, facility name, member cost, and monthly maintenance of facilities in question

SELECT facid, name, membercost, monthlymaintenance 
FROM cd.facilities
WHERE membercost != 0 AND
membercost < (monthlymaintenance/50);

5. Produce a list of all facilities with the word 'Tennis' in their name?
SELECT * FROM cd.facilities 
WHERE name LIKE '%Tennis%';

6. Produce a list of members who joined after the start of September 2012? Return the memid, surname, firstname and joindate
SELECT * FROM cd.facilities 
WHERE facid IN (1,5);
-> same as
SELECT * FROM cd.facilities 
WHERE facid = 1 or facid = 5;

7. Produce a list of members who joined after the start of September 2012?
Return memid, surname, firstname, joindate of these members?
SELECT memid, surname, firstname, joindate FROM cd.members
WHERE date(joindate) >= '2012-09-01';

8. Produce an ordered list of first 10 surnames in the members table? The list must not contain duplicates.
SELECT DISTINCT surname FROM cd.members
ORDER BY surname
LIMIT 10;

9. You'd like to get the signup date of your last member. How can you retrieve this information?
SELECT joindate FROM cd.members
ORDER BY joindate DESC
LIMIT 1; 
-> Alternative shorter way: 
SELECT max(joindate) FROM cd.members

10. Produce a count of the number of facilities that have a cost to guests of 10 or more?
SELECT COUNT(facid) FROM cd.facilities
WHERE guestcost >= 10;

11. No question

12. Produce a list of total numbers of slots booked per facility in the month of September 2012.
Output consists of facid, slots, sorted by number of slots
SELECT facid, SUM(slots)
FROM cd.bookings
WHERE starttime BETWEEN '2012-09-01' AND '2012-09-30'
GROUP BY facid
ORDER BY SUM(slots) DESC
-> we dont use HAVING in this case (HAVING just put a condition for aggregate funtion)

13. Produce a list of facilities with more than 1000 slots booked. Output consists of facid, total slots, sorted by # of slots
SELECT facid, SUM(slots)
FROM cd.bookings
GROUP BY facid
HAVING SUM(slots) > 1000
ORDER BY facid 
-> HAVING is put after GROUP BY, add condition for aggregate function, can't use WHERE in this case

14. Produce a list of start times for bookings for tennis courts
SELECT cd.facilities.name, cd.bookings.starttime
FROM cd.facilities
INNER JOIN cd.bookings ON cd.facilities.facid = cd.bookings.facid
WHERE date(cd.bookings.starttime) = '2012-09-21'
ORDER BY cd.bookings.starttime

15. Produce a list of starttimes for bookings by members named 'David Farrell'
SELECT cd.bookings.starttime FROM cd.members 
INNER JOIN cd.bookings ON cd.bookings.memid = cd.members.memid
WHERE firstname = 'David' AND surname = 'Farrell'

GREAT !!! FINISHED !!!

















